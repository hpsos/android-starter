# spec: https://semantic-release.gitbook.io/semantic-release/usage/configuration

branches: main

plugins:
  # Determine the type of release by analyzing commits.
  # ie: Major, Minor or Patch
  - - "@semantic-release/commit-analyzer"
    - preset: conventionalcommits
      releaseRules:
        - { breaking: true, release: major }
        - { revert: true, release: patch }
        - { type: feat, release: minor }
        - { type: fix, release: patch }
        - { type: perf, release: patch }
        - { type: docs, release: patch }
        - { type: refactor, release: patch }
        - { type: style, release: patch }
        - { type: build, release: patch }
        - { type: ci, release: patch }
        - { type: test, release: patch }
        - { type: update, release: patch }
  # Generate CHANGELOG.md
  - - "@semantic-release/release-notes-generator"
    - preset: conventionalcommits
      presetConfig:
        # spec: https://github.com/conventional-changelog/conventional-changelog-config-spec/tree/master/versions/2.1.0
        types:
          - { type: feat, section: "Features" }
          - { type: fix, section: "Bug Fixes" }
          - { type: chore, section: "Misc" }
          - { type: docs, section: "Misc" }
          - { type: style, section: "Improvements" }
          - { type: refactor, section: "Improvements" }
          - { type: perf, section: "Improvements" }
          - { type: test, section: "Automation" }
          - { type: ci, section: "Automation" }
          - { type: build, section: "Automation" }
          - { type: update, section: "Automation" }
  - "@semantic-release/changelog"
  - - "@semantic-release/exec"
    - # verifyRelease - Tag has not been created (is created after prepare) and version
      # has not been set at this point, so verification of the version is not possible,
      # but verification of dependencies
      verifyReleaseCmd: ./gradlew verifyNoSnapshotDependencies

      # prepare - set release version (if using version file)
      prepareCmd: ./gradlew "-PnewVersion=${nextRelease.version}" setReleaseVersion

      # publish - verify that version is release version and perform publishing tasks
      publishCmd: ./gradlew showVersion verifyReleaseVersion publish -PpublishToGithub=true

      # Commit CHANGELOG.md back to repo
  - - "@semantic-release/git"
    - assets:
        - CHANGELOG.md
        # - version.txt # (if using version file)
        
  # Create new github release
  - "@semantic-release/github"
